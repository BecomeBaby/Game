using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using WMPLib;

namespace Game
{
    public partial class Form1 : Form
    {
        PictureBox[] cloud;
        int backgroundSpeedForClouds;
        Random rnd;

        int backgroundSpeedForTumbleweed;
        PictureBox[] tumbleweed;

        int playerSpeed;

        PictureBox[] bullets;
        int bulletsSpeed;

        WindowsMediaPlayer shoot;
        WindowsMediaPlayer gameSong;
        WindowsMediaPlayer rip;
        WindowsMediaPlayer mainPlayerRip;
        WindowsMediaPlayer win;

        PictureBox[] enemies;
        int sizeEnemy;
        int enemiesSpeed;

        int Score;
        int Level;

        public Form1()
        {
            InitializeComponent();
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            for (int i = 0; i < cloud.Length; i++)
            {
                cloud[i].Left += backgroundSpeedForClouds;

                if (cloud[i].Left >= 1280)
                {
                    cloud[i].Left = cloud[i].Height;
                }
            }

            for (int i = cloud.Length; i < cloud.Length; i++)
            {
                cloud[i].Left += backgroundSpeedForClouds - 10;

                if (cloud[i].Left >= 1280)
                {
                    cloud[i].Left = cloud[i].Left;
                }
            }

            for (int j = 0; j < tumbleweed.Length; j++)
            {
                tumbleweed[j].Left += backgroundSpeedForTumbleweed;

                if (tumbleweed[j].Left >= 1280)
                {
                    tumbleweed[j].Left = tumbleweed[j].Height;
                }
            }

            for (int j = tumbleweed.Length; j < tumbleweed.Length; j++)
            {
                tumbleweed[j].Left += backgroundSpeedForTumbleweed - 10;

                if (tumbleweed[j].Left >= 1280)
                {
                    tumbleweed[j].Left = tumbleweed[j].Left;
                }
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            backgroundSpeedForClouds = 1;
            cloud = new PictureBox[20];

            backgroundSpeedForTumbleweed = 5;
            tumbleweed = new PictureBox[1];
            rnd = new Random();

            playerSpeed = 5;

            bullets = new PictureBox[1];
            bulletsSpeed = 30;

            shoot = new WindowsMediaPlayer();
            shoot.URL = "Songs\\shoot.mp3";
            shoot.settings.volume = 5;

            gameSong = new WindowsMediaPlayer();
            gameSong.URL = "Songs\\GameSong.mp3";
            gameSong.settings.setMode("loop", true);
            gameSong.settings.volume = 15;

            rip = new WindowsMediaPlayer();
            rip.URL = "Songs\\Rip.mp3";
            rip.settings.volume = 25;

            enemies = new PictureBox[4];
            sizeEnemy = rnd.Next(60,80);
            enemiesSpeed = 6;

            mainPlayerRip = new WindowsMediaPlayer();
            mainPlayerRip.URL = "Songs\\mainPlayerRip.mp3";
            mainPlayerRip.settings.volume = 10;

            win = new WindowsMediaPlayer();
            win.URL = "Songs\\win.mp3";
            win.settings.volume = 10;

            Score = 0;
            Level = 1;

            Image easyEnemyes = Image.FromFile("Assets\\virus.gif");

            for (int i = 0; i < enemies.Length; i++)
            {
                enemies[i] = new PictureBox();
                enemies[i].SizeMode = PictureBoxSizeMode.Zoom;
                enemies[i].Size = new Size(sizeEnemy, sizeEnemy);
                enemies[i].BackColor = Color.Transparent;
                enemies[i].Image = easyEnemyes;
                enemies[i].Location = new Point((i + 1) * rnd.Next(90, 160) + 1080, rnd.Next(450,600));

                this.Controls.Add(enemies[i]);
            }

            for (int i = 0; i < bullets.Length; i++)
            {
                bullets[i] = new PictureBox();
                bullets[i].BorderStyle = BorderStyle.None;
                bullets[i].Size = new Size(20, 5);
                bullets[i].BackColor = Color.Gray;

                this.Controls.Add(bullets[i]);
            }


                for (int i = 0; i < cloud.Length; i++)
            {
                cloud[i] = new PictureBox();
                cloud[i].BorderStyle = BorderStyle.None;
                cloud[i].Location = new Point(rnd.Next(-1000, 1280), rnd.Next(140, 320));

                if (i % 2 == 1)
                {
                    cloud[i].Size = new Size(rnd.Next(100, 255), rnd.Next(30, 70));
                    cloud[i].BackColor = Color.FromArgb(rnd.Next(50, 125), 255, 200, 200);
                }
                else
                {
                    cloud[i].Size = new Size(150,25);
                    cloud[i].BackColor = Color.FromArgb(rnd.Next(50, 125), 255, 205, 205);
                }

                this.Controls.Add(cloud[i]);
            }

            for (int j = 0; j < tumbleweed.Length; j++)
            {
                tumbleweed[j] = new PictureBox();
                tumbleweed[j].BorderStyle = BorderStyle.None;
                tumbleweed[j].Location = new Point(rnd.Next(-100, 1280), rnd.Next(750, 900));

                if (j % 2 == 1)
                {
                    tumbleweed[j].Size = new Size(rnd.Next(40, 60), rnd.Next(50, 55));
                    tumbleweed[j].BackColor = Color.FromArgb(rnd.Next(150, 200), 58, 24, 0);
                }
                else
                {
                    tumbleweed[j].Size = new Size(50, 55);
                    tumbleweed[j].BackColor = Color.FromArgb(rnd.Next(170, 255), 52, 28, 0);
                }

                this.Controls.Add(tumbleweed[j]);
            }

            gameSong.controls.play();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }

        private void LeftMoveTimer_Tick(object sender, EventArgs e)
        {
            if (mainPlayer.Left > 10)
            {
                mainPlayer.Left -= playerSpeed;
            }
        }

        private void RightMoveTimer_Tick(object sender, EventArgs e)
        {
            if (mainPlayer.Left < 1150)
            {
                mainPlayer.Left += playerSpeed;
            }
        }

        private void UpMoveTimer_Tick(object sender, EventArgs e)
        {
            mainPlayer.Top -= playerSpeed;
        }

        private void DownMoveTimer_Tick(object sender, EventArgs e)
        {
            mainPlayer.Top += playerSpeed;
        }

        private void Form1_KeyDown(object sender, KeyEventArgs e)
        {
            int escCounter = 0;
            mainPlayer.Image = Properties.Resources.cowboy_run;

            if (e.KeyCode == Keys.Left)
            {
                LeftMoveTimer.Start();
            }

            if (e.KeyCode == Keys.Right)
            {
                RightMoveTimer.Start();
            }

            if (e.KeyCode == Keys.Up)
            {
                UpMoveTimer.Start();
            }

            if (e.KeyCode == Keys.Down)
            {
                DownMoveTimer.Start();
            }

            if (e.KeyCode == Keys.Space)
            {
                shoot.controls.play();

                for (int i = 0; i < bullets.Length; i++)
                {
                    Intersect();

                    if (bullets[i].Left > 1280)
                    {
                        bullets[i].Location = new Point(mainPlayer.Location.X + 100 + i * 50, mainPlayer.Location.Y + 50);
                    }
                }
            }

            if (e.KeyCode == Keys.Escape)
            {
                escCounter++;
            }

            if (escCounter % 2 == 0)
            {
                gameSong.controls.play();
                MoveEnemiesTimer.Start();
                gameOverLabel.Visible = false;
            }
            
            else
            {
                gameSong.controls.stop();
                MoveEnemiesTimer.Stop();
                Pause("Pause");
            }
        }

        private void Form1_KeyUp(object sender, KeyEventArgs e)
        {
            mainPlayer.Image = Properties.Resources.cowboy_idble;

            LeftMoveTimer.Stop();
            RightMoveTimer.Stop();
            UpMoveTimer.Stop();
            DownMoveTimer.Stop();
        }

        private void MoveBulletsTimer_Tick(object sender, EventArgs e)
        {
            for (int i = 0; i < bullets.Length; i++)
            {
                bullets[i].Left += bulletsSpeed;
            }
        }

        private void MoveEnemiesTimer_Tick(object sender, EventArgs e)
        {
            MoveEnemies(enemies, enemiesSpeed);
        }

        private void MoveEnemies(PictureBox[] enemies, int speed)
        {
            for (int i = 0; i < enemies.Length; i++)
            {
                enemies[i].Left -= speed + (int)(Math.Sin(enemies[i].Left * Math.PI / 180)) + (int)(Math.Cos(enemies[i].Left * Math.PI / 180));

                Intersect();

                if (enemies[i].Left < this.Left)
                {
                    int sizeEnemy = rnd.Next(60, 90);
                    enemies[i].Size = new Size(sizeEnemy, sizeEnemy);
                    enemies[i].Location = new Point((i + 1) * rnd.Next(150, 250) + 1080, rnd.Next(450, 650));
                }
            }
        }

        private void Intersect()
        {
            for (int i = 0;i < enemies.Length; i++)
            {
                if (bullets[0].Bounds.IntersectsWith(enemies[i].Bounds))
                {
                    rip.controls.play();

                    Score += 1;
                    scoreLabel.Text = (Score < 10) ? "0" + Score.ToString() : Score.ToString();

                    if (Score % 10 == 0)
                    {
                        Level += 1;
                        levelLabel.Text = (Level < 10) ? "0" + Level.ToString() : Level.ToString();  

                        if (enemiesSpeed <= 9)
                        {
                            enemiesSpeed++;
                        }

                        if (Level == 5)
                        {
                            PlayerWin("Nice Job!");
                        }
                    }

                    enemies[i].Location = new Point((i + 1) * rnd.Next(150, 250) + 1280, rnd.Next(420, 600));
                    bullets[0].Location = new Point(2000, mainPlayer.Location.Y + 50);
                }

                if (mainPlayer.Bounds.IntersectsWith(enemies[i].Bounds))
                {
                    mainPlayer.Visible = false;
                    GameOver("Game Over");
                }
            }
        }

        private void GameOver(string str)
        {
            gameOverLabel.Text = str;
            gameOverLabel.Location = new Point(500, 50);
            gameOverLabel.Visible = true;

            gameSong.controls.stop();
            MoveEnemiesTimer.Stop();

            mainPlayerRip.controls.play();
        }

        private void PlayerWin(string str)
        {
            gameOverLabel.Text = str;
            gameOverLabel.Location = new Point(500, 50);
            gameOverLabel.Visible = true;

            gameSong.controls.stop();
            MoveEnemiesTimer.Stop();

            win.controls.play();
        }

        private void Pause(string str)
        {
            gameOverLabel.Text = str;
            gameOverLabel.Location = new Point(500, 50);
            gameOverLabel.Visible = true;
        }
    }
}
